import React from "react";
import Head from "next/head";
import { GetStaticProps } from "next";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import useSWR from "swr";

type HomeProps = {
  artists: [];
};


// const fetcher = async (input: RequestInfo,
//   init: RequestInit, ...args: any[]) => {
//   const res = await fetch(input, init).then(res => res.json())}

export default function Home(props: HomeProps) {
  const { artists } = props;
  console.log(props);
  // // console.log(artists, props);
  // // console.log(`Basic ` +
  // //       Buffer.from(
  // //         process.env.NEXT_PUBLIC_SPOTIFY_CLIENT_ID +
  // //           `:` +
  // //           process.env.NEXT_PUBLIC_SPOTIFY_CLIENT_SECRET
  // //       ).toString("base64"))

  // fetch("https://accounts.spotify.com/api/token", {
  //   headers: {
  //     "Content-Type": "application/x-www-form-urlencoded",
  //     Authorization:
  //       `Basic ` +
  //       Buffer.from(
  //         process.env.NEXT_PUBLIC_SPOTIFY_CLIENT_ID +
  //           `:` +
  //           process.env.NEXT_PUBLIC_SPOTIFY_CLIENT_SECRET
  //       ).toString("base64"),
  //   },
  //   body: new URLSearchParams({
  //     grant_type: "client_credentials"
  //   }),
  //   method: "POST",
  // }).then((response) => response.text()).then((tokenResponse) => console.log(tokenResponse));

  return (
    <div>
      <Head>
        <title>Syauqy HomePage</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="min-h-screen bg-blue-500">
        {/* {artists.map((artist) => {
          <li>{artist}</li>;
        })} */}
      </div>
    </div>
  );
}

export async function getStaticProps() {
  const res = await fetch("https://accounts.spotify.com/api/token", {
    headers: {
      "Content-Type": "application/x-www-form-urlencoded",
      Authorization:
        `Basic ` +
        Buffer.from(
          process.env.NEXT_PUBLIC_SPOTIFY_CLIENT_ID +
            `:` +
            process.env.NEXT_PUBLIC_SPOTIFY_CLIENT_SECRET
        ).toString("base64"),
    },
    body: new URLSearchParams({
      grant_type: "client_credentials"
    }),
    method: "POST",
  });
  const access_token = await res.json();

  return {
    props: {
      access_token: access_token.access_token,
      artists: ["eric clapton", "mcr"]
    },
  };
}

